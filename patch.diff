diff -Nrup original/moba-desktop/src/app/app.js modified/moba-desktop/src/app/app.js
--- original/moba-desktop/src/app/app.js	2022-06-21 04:22:03.927706291 -0400
+++ modified/moba-desktop/src/app/app.js	2022-06-21 04:22:03.972707480 -0400
@@ -49,29 +49,50 @@ const root_store_1 = require("../common/
 const remote = __importStar(require("@electron/remote/main"));
 const environment_1 = require("../utils/environment");
 const main_utils_1 = require("../windows/main/main.utils");
-const app_hardware_acceleration_1 = require("./app-hardware-acceleration");
+
+//const app_hardware_acceleration_1 = require("./app-hardware-acceleration");
+console.log('Entering app.runApp() ....')
 function runApp() {
+    console.log('app.runApp() --> Calling deep_linking_1.initDeepLinking() ...');
     deep_linking_1.initDeepLinking();
-    app_hardware_acceleration_1.initHardwareAcceleration();
+    //app_hardware_acceleration_1.initHardwareAcceleration();
+    console.log('app.runApp() --> Calling electron_1.app.setAppUserModelId() ... ');
     electron_1.app.setAppUserModelId(environment_1.APP_USER_MODEL_ID);
+    console.log('app.runApp() --> ready to initialize?')
     electron_1.app.on('ready', () => __awaiter(this, void 0, void 0, function* () {
+        console.log('App is READY calling remote.initialize() ....');
         remote.initialize();
+        console.log('App initialized, calling settled resources ...');
         yield Promise.allSettled([app_extrenal_resources_loader_1.loadAppExternalResource(), app_utils_1.clearAppCache(), store_1.initApi()]);
+        console.log('Calling root_store_1.initRootStore()');
         root_store_1.initRootStore();
+        console.log('Calling app_update_1.init()');
         app_update_1.init();
+        console.log('Calling game_data_controller_1.init()');
         game_data_controller_1.init();
+        console.log('Calling app_context_menu_1.init()');
         app_context_menu_1.init();
+        console.log('Calling app_shortcuts_1.init()');
         app_shortcuts_1.init();
+        console.log('Calling app_web_permission_1.init()');
         app_web_permission_1.init();
+        console.log('Calling ipc_protocol_1.init()');
         ipc_protocol_1.init();
+        console.log('Calling app_internal_webview_1.init()');
         app_internal_webview_1.init();
+        console.log('Calling valorant_lcu_controller_1.init()');
         valorant_lcu_controller_1.init();
+        console.log('Calling main_utils_1.showOrCreateWindow()');
         main_utils_1.showOrCreateWindow();
+        console.log('Calling app_tray_1.init()');
         app_tray_1.init();
+        console.log('Calling deep_linking_1.addDeepLinkingListeners()');
         deep_linking_1.addDeepLinkingListeners();
     }));
+    console.log("Event setup: window-all-closed");
     electron_1.app.on('window-all-closed', () => {
     });
+    console.log("Event setup: before-quit");
     electron_1.app.on('before-quit', () => {
         var _a;
         const lolSettingsFetcher = lol_settings_fetcher_1.LolSettingsFetcher.getInstance();
@@ -82,9 +103,10 @@ function runApp() {
         const rootStore = root_store_1.RootStore.getInstance();
         (_a = rootStore.staticDataServer) === null || _a === void 0 ? void 0 : _a.stop();
     });
+    console.log("Event setup: activate");
     electron_1.app.on('activate', () => {
         electron_1.app.isReady() && main_utils_1.showOrCreateWindow();
     });
 }
 exports.runApp = runApp;
-//# sourceMappingURL=app.js.map
\ No newline at end of file
+//# sourceMappingURL=app.js.map
diff -Nrup original/moba-desktop/src/app/app-update.js modified/moba-desktop/src/app/app-update.js
--- original/moba-desktop/src/app/app-update.js	2022-06-21 04:22:03.927706291 -0400
+++ modified/moba-desktop/src/app/app-update.js	2022-06-21 04:22:03.972707480 -0400
@@ -18,8 +18,8 @@ function init() {
     appUpdateController.onUpdateAvailable(analytics_1.Analytics.appUpdate.updateAvailable);
     appUpdateController.onUpdateDownloaded(analytics_1.Analytics.appUpdate.updateDownloaded);
     appUpdateController.onUpdateApplying(analytics_1.Analytics.appUpdate.updateApplying);
-    appUpdateController.onUpdateError(analytics_1.Analytics.appUpdate.updateError);
-    appUpdateController.start(true);
+    //appUpdateController.onUpdateError(analytics_1.Analytics.appUpdate.updateError);
+    appUpdateController.start(false);
 }
 exports.init = init;
 //# sourceMappingURL=app-update.js.map
\ No newline at end of file
diff -Nrup original/moba-desktop/src/app/deep-linking.js modified/moba-desktop/src/app/deep-linking.js
--- original/moba-desktop/src/app/deep-linking.js	2022-06-21 04:22:03.927706291 -0400
+++ modified/moba-desktop/src/app/deep-linking.js	2022-06-21 04:22:03.972707480 -0400
@@ -33,9 +33,17 @@ const game_overlay_1 = require("../utils
 const ipc_messages_types_1 = require("../../../moba-web/src/common/types/desktop/ipc-messages.types");
 const main_utils_1 = require("../windows/main/main.utils");
 function initDeepLinking() {
+    console.log('Inside initDeepLinking() .... ');
     electron_1.app.removeAsDefaultProtocolClient(app_config_1.MOBA_PROTOCOL_NAME);
     if (environment_1.IS_ELECTRON_DEV && environment_1.isWin) {
         electron_1.app.setAsDefaultProtocolClient(app_config_1.MOBA_PROTOCOL_NAME, process.execPath, [path.resolve(process.argv[1])]);
+    } else if (environment_1.isLinux) {
+        if (process.defaultApp) {
+            if (process.argv.length >= 2) {
+                console.log("Detected Linux environment!");
+                electron_1.app.setAsDefaultProtocolClient(app_config_1.MOBA_PROTOCOL_NAME, process.execPath, [path.resolve(process.argv[1])]);
+            }
+        }
     }
     else {
         electron_1.app.setAsDefaultProtocolClient(app_config_1.MOBA_PROTOCOL_NAME);
@@ -52,7 +60,7 @@ function addDeepLinkingListeners() {
         main_utils_1.showAndRestoreMainWindow();
     });
     electron_1.app.on('second-instance', (_e, argv) => {
-        if (environment_1.isWin) {
+        if (environment_1.isWin || environment_1.isLinux) {
             const url = argv.find(it => it.startsWith(`${app_config_1.MOBA_PROTOCOL_NAME}:`));
             url && processDeepLinkingUrl(url);
         }
@@ -90,4 +98,4 @@ function processDeepLinkingUrl(originalU
         logs_1.appUrlsLog.error('Unknown moba protocol communication url: ', { url });
     }
 }
-//# sourceMappingURL=deep-linking.js.map
\ No newline at end of file
+//# sourceMappingURL=deep-linking.js.map
diff -Nrup original/moba-desktop/src/app/ipc-protocol/ipc-protocol.js modified/moba-desktop/src/app/ipc-protocol/ipc-protocol.js
--- original/moba-desktop/src/app/ipc-protocol/ipc-protocol.js	2022-06-21 04:22:03.928706318 -0400
+++ modified/moba-desktop/src/app/ipc-protocol/ipc-protocol.js	2022-06-21 04:22:03.972707480 -0400
@@ -20,4 +20,4 @@ function init() {
     post_game_highlights_ipc_1.initPostGameHighlightsIpc();
 }
 exports.init = init;
-//# sourceMappingURL=ipc-protocol.js.map
\ No newline at end of file
+//# sourceMappingURL=ipc-protocol.js.map
diff -Nrup original/moba-desktop/src/dialogs/select-game-folder-dialog.js modified/moba-desktop/src/dialogs/select-game-folder-dialog.js
--- original/moba-desktop/src/dialogs/select-game-folder-dialog.js	2022-06-21 04:22:03.926706265 -0400
+++ modified/moba-desktop/src/dialogs/select-game-folder-dialog.js	2022-06-21 04:24:06.559944867 -0400
@@ -13,6 +13,7 @@ exports.showSelectLolClientFolderDialog
 const ipc_messages_types_1 = require("../../../moba-web/src/common/types/desktop/ipc-messages.types");
 const remote_1 = require("@electron/remote");
 const ipc_renderer_1 = require("../utils/ipc-renderer");
+const prompt = require('electron-prompt');
 function showSelectLolClientFolderDialog(window) {
     if (remote_1.dialog) {
         return remote_1.dialog
@@ -21,8 +22,29 @@ function showSelectLolClientFolderDialog
             message: 'Choose the LoL installation path. e.g /Applications/League of Legends.app/',
             buttonLabel: 'Select Directory',
             properties: ['openDirectory', 'treatPackageAsDirectory', 'showHiddenFiles'],
-        })
-            .then((result) => __awaiter(this, void 0, void 0, function* () {
+        }).then(result => {
+            return new Promise((res, rej) => {
+                if(result.canceled) {
+                        prompt({
+                                title: 'Enter the LoL installation path',
+                                label: 'Path must be exact',
+                                value: '/drive_c/Riot Games/League of Legends/',
+                                inputAttrs: {
+                                    type: 'text'
+                                },
+                            type: 'input'
+                        }, window).then((r) => {
+                                if(r === null) {
+                                        res(result);
+                                } else {
+                                        res({filePaths:[r]});
+                                }
+                           });
+                   } else {
+                       res(result);
+                   }
+               })
+            }).then((result) => __awaiter(this, void 0, void 0, function* () {
             if (!result.canceled) {
                 const folder = result.filePaths ? result.filePaths[0] : null;
                 const setupResult = yield ipc_renderer_1.ipcRendererInvoke(ipc_messages_types_1.IPC_MESSAGE.SET_GAME_FOLDER_PATH, folder);
@@ -46,4 +68,4 @@ function showSelectLolClientFolderDialog
     }
 }
 exports.showSelectLolClientFolderDialog = showSelectLolClientFolderDialog;
-//# sourceMappingURL=select-game-folder-dialog.js.map
\ No newline at end of file
+//# sourceMappingURL=select-game-folder-dialog.js.map
diff -Nrup original/moba-desktop/src/lol/utils/in-game-imports/in-game-items-import.js modified/moba-desktop/src/lol/utils/in-game-imports/in-game-items-import.js
--- original/moba-desktop/src/lol/utils/in-game-imports/in-game-items-import.js	2022-06-21 04:22:03.894705420 -0400
+++ modified/moba-desktop/src/lol/utils/in-game-imports/in-game-items-import.js	2022-06-21 04:22:03.973707506 -0400
@@ -44,7 +44,7 @@ function importLolGameItems(gameItemsDat
             if (!gameItemsData.blocks.length)
                 return in_game_imports_types_1.LcuGameItemsImportStatus.EMPTY_BLOCKS_LIST;
             const processGamePath = yield lcu_connection_1.getLCUPathFromProcess();
-            const gamePath = processGamePath || root_store_1.getAppSettings().getGameFolderPath();
+            const gamePath = app_settings_1.getAppSettings().getGameFolderPath();
             if (!gamePath)
                 return in_game_imports_types_1.LcuGameItemsImportStatus.GAME_PATH_NOT_FOUND;
             const filePath = path_1.default.join(gamePath, 'Config', 'Global', 'Recommended', '!mobalytics.json');
@@ -70,4 +70,4 @@ function importLolGameItems(gameItemsDat
     });
 }
 exports.importLolGameItems = importLolGameItems;
-//# sourceMappingURL=in-game-items-import.js.map
\ No newline at end of file
+//# sourceMappingURL=in-game-items-import.js.map
diff -Nrup original/moba-desktop/src/main.js modified/moba-desktop/src/main.js
--- original/moba-desktop/src/main.js	2022-06-21 04:22:03.885705182 -0400
+++ modified/moba-desktop/src/main.js	2022-06-21 04:22:03.973707506 -0400
@@ -9,4 +9,14 @@ const MakePromisesSafe = require('make-p
 MakePromisesSafe.logError = (err) => logs_1.generalLog.error('Uncaught promise exception error: ', err);
 const gotTheLock = electron_1.app.requestSingleInstanceLock();
 gotTheLock ? app_1.runApp() : electron_1.app.quit();
-//# sourceMappingURL=main.js.map
\ No newline at end of file
+//# sourceMappingURL=main.js.map
+process
+    .on('unhandledRejection', (reason, p) => {
+        electron_1.dialog.showMessageBoxSync(null, {title: "Uncaught Error", message: err});
+        console.error(reason, 'Unhandled Rejection at Promise', p);
+    })
+    .on('uncaughtException', err => {
+        electron_1.dialog.showMessageBoxSync(null, {title: "Uncaught Error", message: err});
+        console.error(err, 'Uncaught Exception thrown');
+        process.exit(1);
+    });
diff -Nrup original/moba-desktop/src/utils/desktop-bridge.js modified/moba-desktop/src/utils/desktop-bridge.js
--- original/moba-desktop/src/utils/desktop-bridge.js	2022-06-21 04:22:03.886705208 -0400
+++ modified/moba-desktop/src/utils/desktop-bridge.js	2022-06-21 04:22:03.973707506 -0400
@@ -23,16 +23,23 @@ exports.bridge = void 0;
 const os = __importStar(require("os"));
 const path = __importStar(require("path"));
 const remote_1 = require("@electron/remote");
+console.log("In Desktop Bridge: getting select_game_folder_dialog_1 ....");
 const select_game_folder_dialog_1 = require("../dialogs/select-game-folder-dialog");
+console.log("In Desktop Bridge: getting ipc_renderer_1 ....");
 const ipc_renderer_1 = require("./ipc-renderer");
+console.log("In Desktop Bridge: getting select_folder_dialog_1 ....");
 const select_folder_dialog_1 = require("../dialogs/select-folder-dialog");
+console.log("In Desktop Bridge: getting show_file_dialog_1 ....");
 const show_file_dialog_1 = require("../dialogs/show-file-dialog");
+console.log("In Desktop Bridge: getting version_const_1 ....");
 const version_const_1 = require("./version.const");
+console.log("Get OS Platform....");
 const platform = os.platform();
 exports.bridge = {
     version: remote_1.app.getVersion() === '0.0.1' ? version_const_1.DEV_DESKTOP_APP_VERSION : remote_1.app.getVersion(),
     platform,
     isWin: platform !== 'darwin',
+    isLinux: platform !== 'darwin',
     isMac: platform === 'darwin',
     logsPath: path.resolve(remote_1.app.getPath('logs')),
     settings: null,
@@ -57,4 +64,4 @@ exports.bridge = {
     openSelectFolderDialogInCurrentWindow: () => select_folder_dialog_1.showSelectFolderDialog(remote_1.getCurrentWindow()),
     highlightFileInFileSystem: show_file_dialog_1.showFileDialog,
 };
-//# sourceMappingURL=desktop-bridge.js.map
\ No newline at end of file
+//# sourceMappingURL=desktop-bridge.js.map
diff -Nrup original/moba-desktop/src/utils/environment.js modified/moba-desktop/src/utils/environment.js
--- original/moba-desktop/src/utils/environment.js	2022-06-21 04:22:03.886705208 -0400
+++ modified/moba-desktop/src/utils/environment.js	2022-06-21 04:22:03.973707506 -0400
@@ -24,15 +24,16 @@ const path = __importStar(require("path"
 exports.APP_USER_MODEL_ID = 'MobalyticsHQ.DesktopApp';
 exports.isOsX = process.platform === 'darwin';
 exports.isWin = process.platform === 'win32';
+exports.isLinux = process.platform === 'linux';
 exports.isX64 = process.arch === 'x64';
 exports.IS_JEST_TESTING = process.env.JEST_WORKER_ID !== undefined;
-exports.IS_ELECTRON_DEV = require('electron-is-dev');
+exports.IS_ELECTRON_DEV = false;
 exports.LoLProcessNameWin = 'LeagueClient.exe';
 exports.LoLProcessNameMac = 'LeagueClient.app';
-exports.LolProcessName = exports.isWin ? exports.LoLProcessNameWin : exports.LoLProcessNameMac;
+exports.LolProcessName = (exports.isWin || exports.isLinux) ? exports.LoLProcessNameWin : exports.LoLProcessNameMac;
 exports.RiotClientNameWin = 'RiotClientServices.exe';
 exports.RiotClientNameMac = '';
 exports.RiotClientName = exports.isWin ? exports.RiotClientNameWin : exports.RiotClientNameMac;
 exports.LolLogsSubPath = path.join('Logs', 'GameLogs');
 exports.AppExecPath = `"${path.normalize(path.resolve(process.execPath))}"`;
-//# sourceMappingURL=environment.js.map
\ No newline at end of file
+//# sourceMappingURL=environment.js.map
diff -Nrup original/moba-desktop/src/utils/lcu-connection.js modified/moba-desktop/src/utils/lcu-connection.js
--- original/moba-desktop/src/utils/lcu-connection.js	2022-06-21 04:22:03.886705208 -0400
+++ modified/moba-desktop/src/utils/lcu-connection.js	2022-06-21 04:22:03.973707506 -0400
@@ -124,4 +124,4 @@ function isValidLCUPath(dirPath) {
     });
 }
 exports.isValidLCUPath = isValidLCUPath;
-//# sourceMappingURL=lcu-connection.js.map
\ No newline at end of file
+//# sourceMappingURL=lcu-connection.js.map
diff -Nrup original/moba-desktop/src/windows/about/about.window.js modified/moba-desktop/src/windows/about/about.window.js
--- original/moba-desktop/src/windows/about/about.window.js	2022-06-21 04:22:03.886705208 -0400
+++ modified/moba-desktop/src/windows/about/about.window.js	2022-06-21 04:22:03.973707506 -0400
@@ -22,7 +22,7 @@ Object.defineProperty(exports, "__esModu
 exports.toggleAboutWindow = void 0;
 const path = __importStar(require("path"));
 const electron_1 = require("electron");
-const remote = __importStar(require("@electron/remote/main"));
+//const remote = __importStar(require("@electron/remote/main"));
 const desktop_default_settings_1 = require("../../../../moba-web/src/common/desktop-default-settings");
 const navigation_1 = require("../../utils/navigation");
 let aboutWindow;
@@ -48,7 +48,7 @@ function createAboutWindow() {
                 autoplayPolicy: 'user-gesture-required',
             },
         });
-        remote.enable(aboutWindow.webContents);
+        require("@electron/remote/main").enable(mainWindow.webContents);
         navigation_1.initNavigationSecurity(aboutWindow);
         aboutWindow.setMenu(null);
         aboutWindow.loadURL(navigation_1.getSafetyWindowURL('/html/about-window.html'));
@@ -63,4 +63,4 @@ function toggleAboutWindow() {
     aboutWindow ? (aboutWindow.isVisible() ? aboutWindow.hide() : aboutWindow.show()) : createAboutWindow();
 }
 exports.toggleAboutWindow = toggleAboutWindow;
-//# sourceMappingURL=about.window.js.map
\ No newline at end of file
+//# sourceMappingURL=about.window.js.map
diff -Nrup original/moba-desktop/src/windows/game-overlay/game-overlay.window.js modified/moba-desktop/src/windows/game-overlay/game-overlay.window.js
--- original/moba-desktop/src/windows/game-overlay/game-overlay.window.js	2022-06-21 04:22:03.885705182 -0400
+++ modified/moba-desktop/src/windows/game-overlay/game-overlay.window.js	2022-06-21 04:22:03.974707532 -0400
@@ -25,7 +25,6 @@ const electron_1 = require("electron");
 const logs_1 = require("../../utils/logs");
 const navigation_1 = require("../../utils/navigation");
 const environment_1 = require("../../utils/environment");
-const remote = __importStar(require("@electron/remote/main"));
 exports.getGameOverlayWindow = (isOffscreenMode = true, size, factor = 1) => {
     logs_1.gameOverlayLog.debug('Create game overlay window | main script', {
         path: path.join(__dirname, '../main/main.preload.js'),
@@ -56,8 +55,8 @@ exports.getGameOverlayWindow = (isOffscr
             autoplayPolicy: 'user-gesture-required',
         },
     });
-    remote.enable(overlayWindow.webContents);
+    require("@electron/remote/main").enable(aboutWindow.webContents);
     navigation_1.initNavigationSecurity(overlayWindow);
     return overlayWindow;
 };
-//# sourceMappingURL=game-overlay.window.js.map
\ No newline at end of file
+//# sourceMappingURL=game-overlay.window.js.map
diff -Nrup original/moba-desktop/src/windows/main/main.preload.js modified/moba-desktop/src/windows/main/main.preload.js
--- original/moba-desktop/src/windows/main/main.preload.js	2022-06-21 04:22:03.885705182 -0400
+++ modified/moba-desktop/src/windows/main/main.preload.js	2022-06-21 04:22:03.974707532 -0400
@@ -27,4 +27,4 @@ window.__DESKTOP__BRIDGE__ = desktop_bri
 window.__APP_ENV__ = environment_1.serializeAppConfig(appConfig, { APP_IS_DESKTOP: 'true' });
 window.__WINDOW_TYPE__ = desktop_types_1.DesktopWindowType.MAIN;
 console.info('App Logs: ', desktop_bridge_1.bridge.logsPath);
-//# sourceMappingURL=main.preload.js.map
\ No newline at end of file
+//# sourceMappingURL=main.preload.js.map
diff -Nrup original/moba-desktop/src/windows/main/main.utils.js modified/moba-desktop/src/windows/main/main.utils.js
--- original/moba-desktop/src/windows/main/main.utils.js	2022-06-21 04:22:03.885705182 -0400
+++ modified/moba-desktop/src/windows/main/main.utils.js	2022-06-21 04:22:03.974707532 -0400
@@ -6,6 +6,7 @@ const root_store_1 = require("../../comm
 const logs_1 = require("../../utils/logs");
 const navigation_1 = require("../../utils/navigation");
 const main_window_1 = require("./main.window");
+console.log("PREPARE TO BRING UP MAIN WINDOW CONTENTS() ....");
 function sendAppUpdateStatus(status, progress) {
     const payload = { status, progress: progress || null };
     sendToMainWindow(ipc_messages_types_1.IPC_MESSAGE.APP_UPDATE_STATUS_CHANGED, payload);
@@ -144,4 +145,4 @@ function recreateMainWindow() {
     logs_1.generalLog.debug('Main window recreated');
 }
 exports.recreateMainWindow = recreateMainWindow;
-//# sourceMappingURL=main.utils.js.map
\ No newline at end of file
+//# sourceMappingURL=main.utils.js.map
diff -Nrup original/moba-desktop/src/windows/main/main.window.js modified/moba-desktop/src/windows/main/main.window.js
--- original/moba-desktop/src/windows/main/main.window.js	2022-06-21 04:22:03.885705182 -0400
+++ modified/moba-desktop/src/windows/main/main.window.js	2022-06-21 04:22:03.974707532 -0400
@@ -32,7 +32,7 @@ const navigation_1 = require("../../util
 const lang_1 = require("../../../../moba-web/src/common/types/lang");
 const window_unresponsive_dialog_1 = require("../../dialogs/window-unresponsive-dialog");
 const url_1 = require("../../../../moba-web/src/common/types/url");
-const remote = __importStar(require("@electron/remote/main"));
+//const remote = __importStar(require("@electron/remote/main"));
 const root_store_1 = require("../../common/store/root-store");
 let mainWindow;
 let appWindowState;
@@ -78,12 +78,13 @@ function ensureMainWindow() {
             },
             show: false,
             resizable: true,
+            icon: path.join(__dirname, "../../../../../resources/icons/512x512.png"),
             frame: false,
             titleBarStyle: 'hidden',
             maximizable: true,
         });
+        require("@electron/remote/main").enable(mainWindow.webContents);
         appWindowState.manage(mainWindow);
-        remote.enable(mainWindow.webContents);
         mainWindow.loadURL(navigation_1.getSafetyWindowURL(url_1.AppPath.ONBOARDING_ROOT));
         navigation_1.initNavigationSecurity(mainWindow);
         mainWindow.on('ready-to-show', () => {
@@ -107,4 +108,4 @@ function ensureMainWindow() {
     return mainWindow;
 }
 exports.ensureMainWindow = ensureMainWindow;
-//# sourceMappingURL=main.window.js.map
\ No newline at end of file
+//# sourceMappingURL=main.window.js.map
