diff -uraN original/moba-desktop/src/app/auto-update.js modified/moba-desktop/src/app/auto-update.js
--- original/moba-desktop/src/app/auto-update.js	2021-11-03 21:39:30.465190155 +0000
+++ modified/moba-desktop/src/app/auto-update.js	2021-11-03 21:44:14.951846224 +0000
@@ -23,7 +23,7 @@
 function init() {
     electron_updater_1.autoUpdater.autoDownload = false;
     electron_updater_1.autoUpdater.allowDowngrade = true;
-    electron_updater_1.autoUpdater.autoInstallOnAppQuit = true;
+    electron_updater_1.autoUpdater.autoInstallOnAppQuit = false;
     electron_updater_1.autoUpdater.logger = logs_1.appAutoUpdateLog;
     if (environment_1.IS_ELECTRON_DEV) {
         electron_updater_1.autoUpdater.channel = app_config_1.DESKTOP_DEV_UPDATE_CHANNEL;
@@ -53,7 +53,7 @@
         main_window_1.sendAppUpdateStatus(desktop_types_1.AppUpdateStatus.UPDATE_DOWNLOADED);
     });
     electron_updater_1.autoUpdater.on('error', err => {
-        main_window_1.sendAppUpdateStatus(desktop_types_1.AppUpdateStatus.ERROR);
+        //main_window_1.sendAppUpdateStatus(desktop_types_1.AppUpdateStatus.ERROR);
         logs_1.appAutoUpdateLog.error('Error: ', err);
     });
     setInterval(checkForUpdates, app_config_1.DESKTOP_APP_UPDATE_INTERVAL);
@@ -85,4 +85,4 @@
     electron_updater_1.autoUpdater.quitAndInstall();
 }
 exports.quitAndInstall = quitAndInstall;
-//# sourceMappingURL=auto-update.js.map
\ No newline at end of file
+//# sourceMappingURL=auto-update.js.map
diff -uraN original/moba-desktop/src/app/deep-linking.js modified/moba-desktop/src/app/deep-linking.js
--- original/moba-desktop/src/app/deep-linking.js	2021-11-03 21:39:30.465190155 +0000
+++ modified/moba-desktop/src/app/deep-linking.js	2021-11-03 21:57:40.461816218 +0000
@@ -34,8 +34,10 @@
 const ipc_messages_types_1 = require("../../../moba-web/src/common/types/desktop/ipc-messages.types");
 function initDeepLinking() {
     electron_1.app.removeAsDefaultProtocolClient(app_config_1.MOBA_PROTOCOL_NAME);
-    if (environment_1.IS_ELECTRON_DEV && environment_1.isWin) {
-        electron_1.app.setAsDefaultProtocolClient(app_config_1.MOBA_PROTOCOL_NAME, process.execPath, [path.resolve(process.argv[1])]);
+    if (process.defaultApp) {
+        if (process.argv.length >= 2) {
+            electron_1.app.setAsDefaultProtocolClient(app_config_1.MOBA_PROTOCOL_NAME, process.execPath, [path.resolve(process.argv[1])]);
+        }
     }
     else {
         electron_1.app.setAsDefaultProtocolClient(app_config_1.MOBA_PROTOCOL_NAME);
@@ -52,7 +54,7 @@
         main_window_1.showAndRestoreMainWindow();
     });
     electron_1.app.on('second-instance', (_e, argv) => {
-        if (environment_1.isWin) {
+        if (environment_1.isWin || environment_1.isLinux) {
             const url = argv.find(it => it.startsWith(`${app_config_1.MOBA_PROTOCOL_NAME}:`));
             url && processDeepLinkingUrl(url);
         }
@@ -84,4 +86,4 @@
         logs_1.appUrlsLog.error('Unknown moba protocol communication url: ', { url });
     }
 }
-//# sourceMappingURL=deep-linking.js.map
\ No newline at end of file
+//# sourceMappingURL=deep-linking.js.map
diff -uraN original/moba-desktop/src/app/ipc-protocol/ipc-protocol.js modified/moba-desktop/src/app/ipc-protocol/ipc-protocol.js
--- original/moba-desktop/src/app/ipc-protocol/ipc-protocol.js	2021-11-03 21:39:30.465190155 +0000
+++ modified/moba-desktop/src/app/ipc-protocol/ipc-protocol.js	2021-11-03 22:03:16.425137036 +0000
@@ -170,7 +170,7 @@
     }));
     ipc_main_1.ipcMainHandle(ipc_messages_types_1.IPC_MESSAGE.IS_TOBII_AVAILABLE, () => {
         return new Promise(resolve => {
-            if (environment_1.isWin) {
+            if (environment_1.isWin || environment_1.isLinux) {
                 const reader = new gaze_reader_process_1.GazeReaderProcess();
                 reader
                     .spawn(null)
@@ -197,7 +197,7 @@
     });
     ipc_main_1.ipcMainHandle(ipc_messages_types_1.IPC_MESSAGE.CHECK_TOBII_TRACKER_STATUS, () => {
         return new Promise(resolve => {
-            if (environment_1.isWin) {
+            if (environment_1.isWin || environment_1.isLinux) {
                 const reader = new gaze_reader_process_1.GazeReaderProcess();
                 reader
                     .spawn(null)
@@ -242,4 +242,4 @@
     app_settings_ipc_1.initAppSettingsIpc();
 }
 exports.init = init;
-//# sourceMappingURL=ipc-protocol.js.map
\ No newline at end of file
+//# sourceMappingURL=ipc-protocol.js.map
diff -uraN original/moba-desktop/src/gaze-reader/gaze-reader-game-processor.js modified/moba-desktop/src/gaze-reader/gaze-reader-game-processor.js
--- original/moba-desktop/src/gaze-reader/gaze-reader-game-processor.js	2021-11-03 21:39:30.461856822 +0000
+++ modified/moba-desktop/src/gaze-reader/gaze-reader-game-processor.js	2021-11-03 22:04:34.991800776 +0000
@@ -26,7 +26,7 @@
         this.reader = null;
         this.gamesInfoMap = null;
         this.gameStarted = (gameId, summoner, qType) => {
-            if (!environment_1.isWin)
+            if (!(environment_1.isWin || environment_1.isLinux))
                 return;
             if (!app_settings_1.getAppSettings().isTobiiEyeTrackerEnabled())
                 return;
@@ -42,7 +42,7 @@
             });
         };
         this.gameFinished = (gameId) => {
-            if (!environment_1.isWin)
+            if (!(environment_1.isWin || environment_1.isLinux))
                 return;
             if (!app_settings_1.getAppSettings().isTobiiEyeTrackerEnabled())
                 return;
@@ -202,4 +202,4 @@
 }
 exports.GazeReaderGameProcessor = GazeReaderGameProcessor;
 GazeReaderGameProcessor.instance = null;
-//# sourceMappingURL=gaze-reader-game-processor.js.map
\ No newline at end of file
+//# sourceMappingURL=gaze-reader-game-processor.js.map
diff -uraN original/moba-desktop/src/gaze-reader/gaze-reader-process.js modified/moba-desktop/src/gaze-reader/gaze-reader-process.js
--- original/moba-desktop/src/gaze-reader/gaze-reader-process.js	2021-11-03 21:39:30.461856822 +0000
+++ modified/moba-desktop/src/gaze-reader/gaze-reader-process.js	2021-11-03 22:05:11.151799428 +0000
@@ -15,7 +15,7 @@
         this.spawn = (targetPath) => {
             var _a, _b;
             logs_1.gazeReaderLog.debug(`Spawn ${paths_1.TOBII_BINARY_LOCAL_PATH}, pid: ${(_a = this.readerProcess) === null || _a === void 0 ? void 0 : _a.pid}`);
-            if (!environment_1.isWin)
+            if ( !(environment_1.isWin|| environment_1.isLinux))
                 return Promise.reject();
             if (this.readerProcess) {
                 logs_1.gazeReaderLog.error(`Already spawned, pid: ${(_b = this.readerProcess) === null || _b === void 0 ? void 0 : _b.pid}`);
@@ -56,7 +56,7 @@
         this.kill = () => {
             var _a, _b;
             logs_1.gazeReaderLog.debug(`Kill, pid: ${(_a = this.readerProcess) === null || _a === void 0 ? void 0 : _a.pid}`);
-            if (!environment_1.isWin)
+            if ( !(environment_1.isWin|| environment_1.isLinux))
                 return;
             if (!this.readerProcess) {
                 logs_1.gazeReaderLog.error(`Already killed`);
@@ -132,7 +132,7 @@
         this.write = (msg) => {
             var _a, _b;
             logs_1.gazeReaderLog.debug(`Write ${msg}, pid: ${(_a = this.readerProcess) === null || _a === void 0 ? void 0 : _a.pid}`);
-            if (!environment_1.isWin)
+            if ( !(environment_1.isWin|| environment_1.isLinux))
                 return;
             if (!this.readerProcess) {
                 logs_1.gazeReaderLog.error('Unable to write', `process is killed`);
@@ -178,7 +178,7 @@
             return !!(this.unresolvedOpsList && this.unresolvedOpsList.length > 0);
         };
         this.isTobiiAvailable = () => {
-            if (!environment_1.isWin)
+            if ( !(environment_1.isWin|| environment_1.isLinux))
                 return Promise.reject();
             return new Promise((resolve, reject) => {
                 const hasOp = this.hasAsyncOp(gaze_reader_1.GrAsyncOperation.IS_TOBII_AVAILABLE);
@@ -187,7 +187,7 @@
             });
         };
         this.checkTrackerStatus = () => {
-            if (!environment_1.isWin)
+            if ( !(environment_1.isWin|| environment_1.isLinux))
                 return Promise.reject();
             return new Promise((resolve, reject) => {
                 const hasOp = this.hasAsyncOp(gaze_reader_1.GrAsyncOperation.CHECK_TRACKER_STATUS);
@@ -196,7 +196,7 @@
             });
         };
         this.sessionStart = (msg) => {
-            if (!environment_1.isWin)
+            if ( !(environment_1.isWin|| environment_1.isLinux))
                 return Promise.reject();
             return new Promise((resolve, reject) => {
                 const hasOp = this.hasAsyncOp(gaze_reader_1.GrAsyncOperation.SESSION_START);
@@ -205,7 +205,7 @@
             });
         };
         this.sessionUpdate = (msg) => {
-            if (!environment_1.isWin)
+            if ( !(environment_1.isWin|| environment_1.isLinux))
                 return Promise.reject();
             return new Promise((resolve, reject) => {
                 const hasOp = this.hasAsyncOp(gaze_reader_1.GrAsyncOperation.SESSION_UPDATE);
@@ -214,7 +214,7 @@
             });
         };
         this.sessionEnd = () => {
-            if (!environment_1.isWin)
+            if ( !(environment_1.isWin|| environment_1.isLinux))
                 return Promise.reject();
             return new Promise((resolve, reject) => {
                 const hasOp = this.hasAsyncOp(gaze_reader_1.GrAsyncOperation.SESSION_END);
@@ -223,7 +223,7 @@
             });
         };
         this.stop = () => {
-            if (!environment_1.isWin)
+            if (!(environment_1.isWin|| environment_1.isLinux))
                 return Promise.reject();
             return new Promise((resolve, reject) => {
                 const hasOp = this.hasAsyncOp(gaze_reader_1.GrAsyncOperation.PROCESS_STOP);
@@ -234,4 +234,4 @@
     }
 }
 exports.GazeReaderProcess = GazeReaderProcess;
-//# sourceMappingURL=gaze-reader-process.js.map
\ No newline at end of file
+//# sourceMappingURL=gaze-reader-process.js.map
diff -uraN original/moba-desktop/src/utils/environment.js modified/moba-desktop/src/utils/environment.js
--- original/moba-desktop/src/utils/environment.js	2021-11-03 21:39:30.451856823 +0000
+++ modified/moba-desktop/src/utils/environment.js	2021-11-03 21:43:23.018514825 +0000
@@ -23,6 +23,7 @@
 const path = __importStar(require("path"));
 exports.isOsX = process.platform === 'darwin';
 exports.isWin = process.platform === 'win32';
+exports.isLinux = process.platform === 'linux';
 exports.isX64 = process.arch === 'x64';
 exports.IS_JEST_TESTING = process.env.JEST_WORKER_ID !== undefined;
 exports.IS_ELECTRON_DEV = require('electron-is-dev');
@@ -34,4 +35,4 @@
 exports.RiotClientName = exports.isWin ? exports.RiotClientNameWin : exports.RiotClientNameMac;
 exports.LolLogsSubPath = path.join('Logs', 'GameLogs');
 exports.DEV_APP_VERSION = '999.999.999';
-//# sourceMappingURL=environment.js.map
\ No newline at end of file
+//# sourceMappingURL=environment.js.map
